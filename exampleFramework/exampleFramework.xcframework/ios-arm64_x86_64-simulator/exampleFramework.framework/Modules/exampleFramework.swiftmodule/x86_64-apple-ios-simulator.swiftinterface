// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios15.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name exampleFramework
import Swift
import UIKit
import _Concurrency
@_exported import exampleFramework
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class BaseTableViewCell : UIKit.UITableViewCell {
  @objc override dynamic open func awakeFromNib()
  @_Concurrency.MainActor(unsafe) open func setupLayout()
  @_Concurrency.MainActor(unsafe) open func setDesign()
  @_Concurrency.MainActor(unsafe) open func setupAttributes()
  @available(iOS 3.0, *)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) open class BaseViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) open func setupLayout()
  @_Concurrency.MainActor(unsafe) open func setupAttributes()
  @_Concurrency.MainActor(unsafe) open func setData()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class BaseCollectionViewCell : UIKit.UICollectionViewCell {
  @objc override dynamic open func awakeFromNib()
  @_Concurrency.MainActor(unsafe) open func setupLayout()
  @_Concurrency.MainActor(unsafe) open func setDesign()
  @_Concurrency.MainActor(unsafe) open func setupAttributes()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
